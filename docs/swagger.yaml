basePath: /api/v1
definitions:
  dto.LoginInput:
    properties:
      password:
        example: securepassword123
        type: string
      username:
        example: johndoe
        type: string
    type: object
  dto.SignUpInput:
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: securepassword123
        type: string
      username:
        example: johndoe
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample API for user management.
  title: Golang API
  version: "1.0"
paths:
  /users/{id}:
    delete:
      description: Deletes a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete a user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Log in with username and password to receive a token
      parameters:
      - description: User login payload
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInput'
      produces:
      - application/json
      responses: {}
      summary: Authenticate a user
      tags:
      - users
  /users/signup:
    post:
      consumes:
      - application/json
      description: Create a user account with a username and password
      parameters:
      - description: User signup payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpInput'
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - users
  /users/validate:
    get:
      description: Returns the logged-in user's information if the session is valid
      produces:
      - application/json
      responses: {}
      summary: Validate current session
      tags:
      - users
swagger: "2.0"
